name: peeptodo backend CICD

on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ develop ]
    
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Decode and Unzip OCI Wallet
        run: |
          echo "${{ secrets.OCI_WALLET }}" | base64 --decode > oci-wallet.zip
          unzip oci-wallet.zip -d ./src/main/resources/OracleCloud

      - name: Set DB_PASSWORD & JWT_SECRET for Github Env
        run: |
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> $GITHUB_ENV
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> $GITHUB_ENV

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      
      - name: Build with Gradle
        run: ./gradlew build

      - name: Setup app.yaml with secrets
        run: |
          cd ./src/main/appengine
          echo "" >> app.yaml
          echo "env_variables:" >> app.yaml
          echo "  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}" >> app.yaml
          echo "  OAUTH_GOOGLE_ID: ${{ secrets.OAUTH_GOOGLE_ID }}" >> app.yaml
          echo "  OAUTH_GOOGLE_SECRET: ${{ secrets.OAUTH_GOOGLE_SECRET }}" >> app.yaml
          echo "  JWT_SECRET: ${{ secrets.JWT_SECRET }}" >> app.yaml
      
      - name: Auth to GCP
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
        
      - name: Deploy to App Engine
        uses: 'google-github-actions/deploy-appengine@v1'
        with:
          deliverables: build.gradle
          project_id: ${{ secrets.PROJECT_ID }}
